import Head from "next/head";
import Link from "next/link";
import { diceParser } from "../lib/dice-lang/dice-lang-parse";
import { dicePrettyPrint } from "../lib/dice-lang/dice-lang-pretty-print";
import { diceLangSimplify } from "../lib/dice-lang/dice-lang-simplify";
import styles from "../lib/page-styles/test-gallery.module.scss";

export default function TestGallery() {
  return (
    <>
      <Head>
        <title>Test Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Link href="/dice">Dice</Link>
        <table className={styles.equationTable}>
          <tbody>
            <Row equation="d20" />
            <Row equation="2d6" />
            <Row equation="d8*(2/3)" />
            <Row equation="8*(2/3)" />
            <Row equation="(2/3)*8" />
            <Row equation="1+2" />
            <Row equation="1-2" />
            <Row equation="2*3" />
            <Row equation="3/8" />
            <Row equation="d(d5)" />
            <Row equation="d(2/d5)" />
          </tbody>
        </table>
      </main>
    </>
  );
}

function Header() {
  return (
    <tr>
      <th>Equation</th>
      <th>Prettified</th>
      <th>Minified</th>
      <th>Simplified</th>
      <th>MathML</th>
    </tr>
  );
}

function Row({ equation }: { equation: string }) {
  const parseResult = diceParser.parse(equation);

  const parsedExpr = parseResult.status ? parseResult.value : undefined;

  return (
    <tr>
      <td>
        <code>{equation}</code>
      </td>
      {parsedExpr ? (
        <>
          <td>
            <code>{dicePrettyPrint(parsedExpr)}</code>
          </td>
          <td>
            <code>{dicePrettyPrint(parsedExpr, { format: "min" })}</code>
          </td>
          <td>
            <code>{dicePrettyPrint(diceLangSimplify(parsedExpr))}</code>
          </td>
          <td>
            <code
              dangerouslySetInnerHTML={{
                __html: dicePrettyPrint(parsedExpr, { format: "MathML" }),
              }}
            />
          </td>
        </>
      ) : null}
    </tr>
  );
}
